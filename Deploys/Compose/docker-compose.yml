version: '3'
networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}
  kong-net:
    driver: ${NETWORKS_DRIVER}

volumes:
  mongo:
    driver: ${VOLUMES_DRIVER}

services:
### Workspace #############################################
  workspace:
    build:
      context: ./Workspace
    ports:
      - "${PORTAINER_PORT}:9000"
    networks:
      - backend
      - frontend
    environment:
      - "API_URL=http://ironfunctions:8080"
### Form.io ##############################################
  formio:
    build: ./Formio
    env_file:
      - ./.env
    ports:
      - '${FORMIO_PORT}:3001'
    restart: unless-stopped
    networks:
      - backend
    depends_on:
    - mongo
### MongoDB ##############################################
  mongo:
    build: ./MongoDB
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ${DATA_PATH_HOST}/mongo:/data/db
    environment:
      - "MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}"
      - "MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}"
      - "MONGO_INITDB_DATABASE=${MONGO_DB_NAME}"
      - "MONGO_DB_USER=${MONGO_DB_USER}"
      - "MONGO_DB_PASSWORD=${MONGO_DB_PASSWORD}"
    networks:
      - backend
    restart: unless-stopped
### OpenCpu #############################################
  opencpu:
    build: ./OpenCpu
    ports:
      - "${OPENCPU_PORT_HTTPS}:443"
      - "${OPENCPU_PORT_HTTP}:80"
    networks:
      - backend
    restart: unless-stopped
### KONG DATABASE ################################################
  kong-database:
    build:
      context: ./Kong/database
    volumes:
      - ${DATA_PATH_HOST}/Cassandra:/var/lib/cassandra
    ports:
      - "${KONG_DATABASE_PORT}:9042"
    networks:
      - backend
      - kong-net
### KONG MIGRATIONS ################################################
  kong-migrations:
    build:
      context: ./Kong
    networks:
      - backend
      - kong-net
    environment:
      - "KONG_DATABASE=cassandra"
      - "KONG_PG_HOST=kong-database"
      - "KONG_CASSANDRA_CONTACT_POINTS=kong-database"
    command: kong migrations up
    depends_on:
      - kong-database
### KONG SERVICE ################################################
  kong:
    build:
      context: ./Kong
    networks:
      - backend
      - kong-net
    environment:
      - "KONG_DATABASE=cassandra"
      - "KONG_PG_HOST=kong-database"
      - "KONG_CASSANDRA_CONTACT_POINTS=kong-database"
      - "KONG_PROXY_ACCESS_LOG=/dev/stdout"
      - "KONG_ADMIN_ACCESS_LOG=/dev/stdout"
      - "KONG_PROXY_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_ERROR_LOG=/dev/stderr"
      - "KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl"
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "8444:8444"
    depends_on:
      - kong-database
      - konga
### KONGA UI ################################################
  konga:
    build:
      context: ./Kong/ui
    ports:
      - "1337:1337"
    networks:
      - kong-net
### Portainer ################################################
  portainer:
    build:
      context: ./Portainer
    volumes:
      - ${DATA_PATH_HOST}/portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "${PORTAINER_PORT}:9000"
### NetData ################################################
  netdata:
    image: titpetric/netdata:latest
    cap_add:
    - SYS_PTRACE
    volumes:
    - /:/host:ro
    ports:
      - "${NETDATA_PORT}:19999"
    networks:
      - backend
    